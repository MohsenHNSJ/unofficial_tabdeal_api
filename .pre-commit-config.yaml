---
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
minimum_pre_commit_version: "4.2.0"
repos:
  # Hooks which are useful for checking the pre-commit configuration itself.
  - repo: meta
    hooks:
      # Ensures that the configured hooks apply to at least one file in the repository.
      - id: check-hooks-apply
        # Ensures that exclude directives apply to any file in the repository.
      - id: check-useless-excludes

    # Check and update pre-commit hooks.
  - repo: https://gitlab.com/vojko.pribudic.foss/pre-commit-update
    rev: v0.8.0
    hooks:
      - id: pre-commit-update

    # Detect secrets like passwords, API keys, and tokens
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.27.2
    hooks:
      - id: gitleaks
        # Also scan archives
        args: [--max-archive-depth, "10"]

    # Upgrade syntax for newer versions of the language.
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade

    # Add trailing commas to calls and literals.
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.2.0
    hooks:
      - id: add-trailing-comma

    # Finds bugs in your shell scripts.
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

    # A set of pre-commit hooks for jsonschema validation.
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.33.1
    hooks:
      # Validate Dependabot Config (v2)
      - id: check-dependabot
        # Validate GitHub Workflows
      - id: check-github-workflows
        # Validate ReadTheDocs config
      - id: check-readthedocs
        # Validate Github Actions
      - id: check-github-actions

    # Static checker for GitHub Actions workflow files
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint

    # A handful of language-agnostic hooks which are universally useful.
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Prevent giant files from being committed.
      - id: check-added-large-files
        # Check all listed files not just those staged for addition
        args: [--enforce-all]
        # Simply check whether files parse as valid python.
      - id: check-ast
        # Check for files with names that would conflict on a case-insensitive filesystem like MacOS HFS+ or Windows FAT.
      - id: check-case-conflict
        # Check for files that cannot be created on Windows.
      - id: check-illegal-windows-names
        # Attempts to load all json files to verify syntax.
      - id: check-json
        # Check for files that contain merge conflict strings.
      - id: check-merge-conflict
        # Attempts to load all TOML files to verify syntax.
      - id: check-toml
        # Attempts to load all yaml files to verify syntax.
      - id: check-yaml
        # Check for debugger imports and py37+ breakpoint() calls in python source.
      - id: debug-statements
        # Detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
        # This usually happens on Windows when a user clones a repository that has symlinks but they do not have the permission to create symlinks.
      - id: destroyed-symlinks
        # Checks for the existence of private keys.
      - id: detect-private-key
        # Makes sure files end in a newline and only a newline.
      - id: end-of-file-fixer
        # Replaces or checks mixed line ending.
      - id: mixed-line-ending
        # Verifies that test files are named correctly.
      - id: name-tests-test
        # Ensure tests match test_.*\.py
        args: [--pytest-test-first]
        # Checks that all your JSON files are pretty. "Pretty" here means that keys are sorted and indented.
      - id: pretty-format-json
        # Automatically format json files
        args: [--autofix, --no-ensure-ascii, --indent, "2"]
        # Sorts entries in requirements.txt and constraints.txt and removes incorrect entry
      - id: requirements-txt-fixer
        # Trims trailing whitespace.
      - id: trailing-whitespace

    # A collection of fast, cheap, regex based hooks.
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      # Enforce that noqa annotations always occur with specific codes.
      - id: python-check-blanket-noqa
        # Enforce that # type: ignore annotations always occur with specific codes.
      - id: python-check-blanket-type-ignore
        # Enforce that python3.6+ type annotations are used instead of type comments
      - id: python-use-type-annotations
        # Detect common mistake of using single backticks when writing rst
      - id: rst-backticks
        # Detect mistake of rst directive not ending with double colon or space before the double colon
      - id: rst-directive-colons
        # Detect mistake of inline code touching normal text in rst
      - id: rst-inline-touching-normal

    # Ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.1
    hooks:
      # Run the linter
      - id: ruff
        # Also fix errors
        args: [--fix]
        # Run the formatter
      - id: ruff-format

    # Identify unused dependencies and avoid a bloated virtual environment.
  - repo: https://github.com/fredrikaverpil/creosote.git
    rev: v4.0.3
    hooks:
      - id: creosote

    # Poetry
  - repo: https://github.com/python-poetry/poetry
    rev: 2.1.3
    hooks:
      # Make sure the poetry configuration does not get committed in a broken state.
      - id: poetry-check
        # Verifies that poetry.lock exists for the current pyproject.toml.
        args: ["--lock"]
        # Calls the poetry lock command to make sure the lock file is up-to-date when committing changes.
      - id: poetry-lock

    # A shell parser, formatter, and interpreter with bash support
  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.11.0-1
    hooks:
      - id: shfmt
        # Simplify shell scripts, Error with a diff when the formatting differs
        args: ["--simplify", "--diff"]

  # A fast, flexible, configuration-based command-line interface for linting Markdown/CommonMark files with the markdownlint library
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.18.1
    hooks:
      - id: markdownlint-cli2

  # Checks all of the hyperlinks in a markdown text to determine if they are alive or dead
  - repo: https://github.com/tcort/markdown-link-check
    rev: v3.13.7
    hooks:
      - id: markdown-link-check
        # Displays errors only
        args: [-q]

ci:
  # Skip the following hooks in pre-commit.ci
  # poetry-lock fails as the CI runners are not connected to internet.
  skip: [poetry-lock]
  # Disable auto-fixing PRs
  autofix_prs: false
  # Send auto-update PRs to the following branch
  autoupdate_branch: "dev"
