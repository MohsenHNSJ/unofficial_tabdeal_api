---
name: Release test package to test.PyPI

on:
  push:
    branches:
      - dev
permissions:
  contents: read

jobs:
  release-test-package:
    name: Release test package to test.PyPI
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Ensure Poetry cache directory exists
        run: mkdir -p ~/.cache/pypoetry

      - name: Cache pip
        id: cache-pip
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Print pip cache status
        run: |
          echo "pip cache hit: ${{ steps.cache-pip.outputs.cache-hit }}"

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Print Poetry cache status
        run: |
          echo "poetry cache hit: ${{ steps.cache-poetry.outputs.cache-hit }}"

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "{sha}={$(git rev-parse --verify --quiet HEAD^)}" >> "$GITHUB_ENV"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@b1778166f13188a9d478e2d1198f993011ba9864 # v2.0.3
        with:
          version-command: |
            bash -o pipefail -c "poetry version | awk '{ print \$2}'"

      - name: Bump version for development release
        run: |
          version="$(poetry version | awk '{ print $2 }')" &&
          poetry version "$version.dev.$(date +%s)"

      - name: Build package
        run: poetry build --ansi

      - name: Publish package to Test.PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/

      - name: Publish the release notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        with:
          publish: false
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
