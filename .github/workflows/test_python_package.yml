name: Test Python code and Publish package to PyPI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test_code:
    name: Test the python code

    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12.8", "3.13.1"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=150 --statistics
    - name: Analyze with Pylint
      run: |
        pylint --max-line-length=150 --disable=fixme --disable=too-few-public-methods $(git ls-files '*.py')

  build:
    needs: test_code
    name: Build distribution
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install PyPa/Build
      run: >-
         python3 -m
         pip install
         build
         --user
    - name: Build binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distribution
        path: dist/
  
  publish-to-test-pypi:
    name: >-
      Publish python distribution to test.PyPI
    needs:
    - build
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://test.pypi.org/p/unofficial_tabdeal_api
    permissions:
      id-token: write
    
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to test.PyPI
      uses: pypa/gh-action-pypi-publish@release/v1